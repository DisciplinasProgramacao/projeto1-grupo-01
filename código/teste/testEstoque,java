import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;

import org.junit.jupiter.api.Test;

class EstoqueTest {

	@Test
    public void testAdicionarProduto() {
        Estoque estoque = new Estoque(10);
        Produto produto = new Produto();
        assertTrue(estoque.adicionarProduto(produto));
        assertEquals(1, estoque.getQuantidadeProdutos());
    }
	 @Test
	    public void testGetProdutosAbaixoDoMinimo() {
	        Estoque estoque = new Estoque(50);
	        
	        Produto p1 = new Produto();
	        estoque.adicionarProduto(p1);
	        
	        p1.setQuantidadeEstoque(15, 0);
	
	        ArrayList<Produto> produtosAbaixo = estoque.getProdutosAbaixoDoMinimo(15);
	        //escreva um numero abaixo de 15
	        assertFalse(produtosAbaixo.contains(p1));
	    }
	 
	@Test
    public void testRemoverProduto() {
        Estoque estoque = new Estoque(10);
        Produto produto = new Produto();
        Produto produto2 = new Produto();
        produto.setDescricao("Ma√ßa");
        produto2.setDescricao("Pera");
        estoque.adicionarProduto(produto);
        assertEquals(1, estoque.getQuantidadeProdutos());
    }
	
	 @Test
	    public void testComprarProduto() {
	        Produto produto1 = new Produto();
	        
	        Estoque estoque = new Estoque(10);
	        
	        estoque.adicionarProduto(produto1);
	        
	        estoque.comprarProduto(produto1, 20);
	        
	        
	        assertEquals(20, produto1.getQuantidadeEstoque());
	        
	 
	    }

	
	 
	 @Test
	    public void testGetQuantidadeProdutos() {
	        Estoque estoque = new Estoque(10);
	        Produto produto1 = new Produto();
	        Produto produto2 = new Produto();
	        estoque.adicionarProduto(produto1);
	        estoque.adicionarProduto(produto2);
	        assertEquals(2, estoque.getQuantidadeProdutos());
	    }
	 

	 @Test
		void testVenderProduto() {
			Estoque estoque = new Estoque(10);
			
			Produto produto = new Produto();
		
			estoque.adicionarProduto(produto);
			produto.setQuantidadeEstoque(40, 0);

			estoque.venderProduto(produto, 10);
			
			assertEquals(30, produto.getQuantidadeEstoque());
		}
	 @Test
	 void testValorTotalEstoque() {
		 Estoque estoque = new Estoque(10);
		Produto produto = new Produto();
		estoque.adicionarProduto(produto);
		produto.setQuantidadeEstoque(10, 0);
		produto.setPrecoCusto(50);
		produto.setMargemLucro(40);
		assertEquals(700,estoque.getValorTotalEstoque()); 
	 }

	 
}
